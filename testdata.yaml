apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: default
spec:
  rules:
  - host: foo.example.com
    http:
      paths:
      - backend:
          serviceName: foo
          servicePort: 80
        path: /*
  tls:
  - hosts:
    - foo.example.com
    secretName: sds-credential
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - host: echo.example.com
    http:
      paths:
      - backend:
          serviceName: echo
          servicePort: 80
        path: /*
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: http-only
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - host: foo.bar.not-matched.com
    http:
      paths:
      - backend:
          serviceName: echo
          servicePort: 80
        path: /*
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wildcard
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - host: "*.example.com"
    http:
      paths:
      - backend:
          serviceName: echo
          servicePort: 80
        path: /*
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wildcard2
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - host: "*.example.com"
    http:
      paths:
      - backend:
          serviceName: echo
          servicePort: 80
        path: /bar*
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wildcard-to-explicit
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - host: "*.other.com"
    http:
      paths:
      - backend:
          serviceName: echo
          servicePort: 80
        path: /*
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress2
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - host: httpbin.example.com
    http:
      paths:
      - backend:
          serviceName: httpbin
          servicePort: 80
        path: /*
---



apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-autogenerated-k8s-ingress
  namespace: gke-system
spec:
  selector:
    istio: ingress-gke-system
  servers:
  - port:
      number: 80
      protocol: HTTP2
      name: http
    hosts:
    - "*"
  - hosts:
    - "echo.example.com"
    port:
      name: https-demo-wildcard
      number: 443
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: echo-cred
  - hosts:
    - "mtls.example.com"
    port:
      name: https-demo-wildcard
      number: 443
      protocol: HTTPS
    tls:
      mode: MUTUAL
      credentialName: mtls-cred
  - hosts:
    - "something.other.com"
    port:
      name: https-demo-wildcard
      number: 443
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: other-cred
  - hosts:
    - "*.example.com"
    port:
      name: https-demo-wildcard
      number: 443
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: star-example-cred
