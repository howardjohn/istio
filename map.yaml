apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: "sidecar-policy.example.com"
spec:
  policyName: "sidecar-policy.example.com"
---
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicy
metadata:
  name: "sidecar-policy.example.com"
spec:
  matchConstraints:

    resourceRules:
      - apiGroups:   [""]
        apiVersions: ["v1"]
        operations:  ["CREATE"]
        resources:   ["pods"]

  matchConditions:
    - name: does-not-already-have-sidecar
      expression: "!has(object.spec.initContainers) || !object.spec.initContainers.exists(ic, ic.name == 'ztunnel')"
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
  - patchType: "ApplyConfiguration"
    applyConfiguration:
      expression: >
        Object{
          spec: Object.spec{
            initContainers: [
              Object.spec.initContainers{
                name: 'ztunnel',
                image: 'gcr.io/istio-testing/ztunnel',
                imagePullPolicy: 'Always',
                restartPolicy: 'Always',
                terminationMessagePolicy: 'File'
              }
            ]
          }
        }